##### Dependency Versions Start ########
[versions]
# App Configs
config_android_minsdk = "23"
config_android_compilesdk = "35"
config_android_targetsdk = "35"
config_android_versioncode = "1"
config_android_versionName = "1.0.0"
config_android_applicationId = "com.example.composetemplate"

# Important
kotlin = "2.1.20"
android_gradle_plugin = "8.9.1"

# Kotlin Helpers
kotlinx_date_time = "0.6.2"
kotlinx_coroutines = "1.10.2"
kotlinx_serialization = "1.8.1"
kotlinx_collections_immutable = "0.3.8"

# Network
ktor = "3.1.2"

# Android Essentials
activity = "1.10.1"
core_ktx = "1.16.0"
appCompat = "1.7.0"
splash_screen = "1.1.0-rc01"
google_material = "1.12.0"

# Compose
composeCompiler = "1.5.15"
compose = "2025.04.00"
glance = "1.1.1"

# Lifecycle
lifecycle = "2.9.0-beta01"
saveState = "1.2.1"

# Navigation
androidx_navigation = "2.9.0-beta01"
decompose = "3.3.0"

# DI
koin = "4.0.3"

# Square (Block)
sqlDelight = "2.0.2"
leakcanary = "3.0-alpha-8"

# Testing
junit = "4.13.2"
junit_test = "1.2.1"
espresso_test = "3.6.1"
androidx_test_core = "1.6.1"
androidx_test_arch_core = "2.2.0"
androidx_benchmark = "1.3.4"
androidx_uiautomator = "2.3.0"
androidx_profileinstaller = "1.4.1"

# Helper libs
coil_image = "3.1.0"
accompanist = "0.37.2"

# Preference
androidx_datastore = "1.1.4"

# Billing
revenueCat = "8.16.0"

# Logging
timber = "5.0.1"
slf4j = "1.7.30"
logback = "1.2.3"
kermit = "1.0.0"

# Linter
ktlint_gradle = "12.1.1"
linter_twitter_compose = "0.0.26"
detekt = "1.23.6"

# Extras
lottie = "6.4.0"
palette = "1.0.0"
desugaring = "2.1.5"

# Google Services and Firebase
google_services = "4.4.2"
play_services_auth = "21.3.0"
firebase_bom = "33.12.0"
crashlytics_gradle = "3.0.3"

######## Dependency versions End #############


########### Libraries Start ##################
[libraries]
# Build Plugins (as Classpath)
android_gradle_plugin = { module = "com.android.tools.build:gradle", version.ref = "android_gradle_plugin" }
kotlin_gradle_plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin_serialization_plugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
sqldelight_plugin = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqlDelight" }
google_services_plugin = { module = "com.google.gms:google-services", version.ref = "google_services" }
firebase_crashlytics_plugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "crashlytics_gradle" }

# Kotlin
kotlinx_serialization_core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx_serialization" }
kotlinx_serialization_json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx_serialization" }
kotlinx_date_time = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx_date_time" }
kotlinx_collections_immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx_collections_immutable" }
kotlin_junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx_coroutines" }
coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx_coroutines" }
coroutines_playservices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx_coroutines" }
coroutines_test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx_coroutines" }

# Core & Essentials
activity_compose = { module = "androidx.activity:activity-compose", version.ref = "activity" }
core_ktx = { module = "androidx.core:core-ktx", version.ref = "core_ktx" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
google_material = { module = "com.google.android.material:material", version.ref = "google_material" }
splash_screen_core = { module = "androidx.core:core-splashscreen", version.ref = "splash_screen" }

# Lifecycle
lifecycle_compose_runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
viewmodel_core = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
viewmodel_compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
savedState = { module = "androidx.savedstate:savedstate-ktx", version.ref = "saveState" }

# Compose
compose_bom = { module = "androidx.compose:compose-bom", version.ref = "compose" }
compose_runtime = { module = "androidx.compose.runtime:runtime" }
compose_ui = { module = "androidx.compose.ui:ui" }
compose_foundation = { module = "androidx.compose.foundation:foundation" }
compose_foundation_layout = { module = "androidx.compose.foundation:foundation-layout" }
compose_material = { module = "androidx.compose.material:material" }
compose_material3 = { module = "androidx.compose.material3:material3" }
compose_material_icons_core = { module = "androidx.compose.material:material-icons-core" }
compose_material_icons_extended = { module = "androidx.compose.material:material-icons-extended" }
compose_animation = { module = "androidx.compose.animation:animation" }
compose_preview = { module = "androidx.compose.ui:ui-tooling-preview" }
coil_compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil_image" }
compose_glance = { module = "androidx.glance:glance-appwidget", version.ref = "glance" }
lottie_compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }

# Compose Testing (As testImplementation or debugImplementation)
compose_junit = { module = "androidx.compose.ui:ui-test-junit4" }
compose_tooling = { module = "androidx.compose.ui:ui-tooling" }
compose_tooling_preview = { module = "androidx.compose.ui:ui-tooling-preview" }

# Accompanist
accompanist_nav_animations = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist_pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompanist_swipe_refresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
accompanist_system_ui_controller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }

# Navigation
navigation_compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx_navigation" }
decompose_core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose_compose_jb = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }

# DI - Koin
koin_bom = { module = "io.insert-koin:koin-bom", version.ref = "koin"}
koin_core = { module = "io.insert-koin:koin-core" }
koin_android = { module = "io.insert-koin:koin-android" }
koin_android_compose = { module = "io.insert-koin:koin-androidx-compose" }
koin_android_workmanager = { module = "io.insert-koin:koin-androidx-workmanager" }
koin_test = { module = "io.insert-koin:koin-test" }
koin_test_junit = { module = "io.insert-koin:koin-test-junit4" }

# Testing - JUnit
junit_core = { module = "junit:junit", version.ref = "junit" }
junit_test = { module = "androidx.test.ext:junit", version.ref = "junit_test" }
junit_test_ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "junit_test" }

# Testing - Other
androidx_test_core = { module = "androidx.test:core-ktx", version.ref = "androidx_test_core" }
androidx_test_arch_core = { module = "androidx.arch.core:core-testing", version.ref = "androidx_test_arch_core" }
espresso_core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso_test" }
androidx_benchmark_macro = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "androidx_benchmark" }
androidx_test_uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidx_uiautomator" }
androidx_profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "androidx_profileinstaller" }

# Helpers and Extras
palette = { module = "androidx.palette:palette-ktx", version.ref = "palette" }
desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugaring" }

# Network (KTOR)
ktor_client_core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor_client_android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor_client_okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor_client_content_negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor_client_serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor_client_serialization_json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor_client_logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Billing
revenueCat_android = { module = "com.revenuecat.purchases:purchases", version.ref = "revenueCat" }

# Persistence
androidx_datastore_preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx_datastore" }

# Firebase
firebase_bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase_bom" }
firebase_analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase_crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase_auth = { module = "com.google.firebase:firebase-auth-ktx" }
playservices_auth = { module = "com.google.android.gms:play-services-auth", version.ref = "play_services_auth" }

# Square (Block)
sqldelight_runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqlDelight" }
sqldelight_coroutines = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight_android_driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight_sqlite_driver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
leakcanary_android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

# Logging
slf4j_simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
logback_classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kermit_log = { module = "co.touchlab:kermit", version.ref = "kermit" }
timber_log = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Linter
detekt_gradle_plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt_formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
ktlint_gradle_plugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint_gradle" }
ktlint_rule_twitter_compose = { module = "com.twitter.compose.rules:ktlint", version.ref = "linter_twitter_compose" }
detekt_rule_twitter_compose = { module = "com.twitter.compose.rules:detekt", version.ref = "linter_twitter_compose" }

########### Libraries End ##################


############# Bundles Start ##################
[bundles]
# Bundles that can be used together
android_core = ["core.ktx", "appCompat"]
compose_core = ["compose.ui", "compose.runtime", "compose.foundation", "compose.foundation.layout",
    "compose.material3", "compose.material.icons.core", "compose.material.icons.extended",
    "compose.animation", "compose.preview", "coil.compose", "activity.compose", "compose.tooling.preview",
    "kotlinx.collections.immutable"]

############# Bundles End ##################


########### Plugnis Start ##################
[plugins]
# All Plugins should stay here
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin_seriazation = { id = "plugin.serialization", version.ref = "kotlin" }
ktlint_gradle = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint_gradle" }
detekt_gradle = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt"}

########### Plugnis END ##################
